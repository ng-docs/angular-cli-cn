{
  "$schema": "http://json-schema.org/schema",
  "id": "SchematicsAngularComponent",
  "title": "Angular Component Options Schema",
  "type": "object",
  "description": "Creates a new generic component definition in the given or default project.\n\n在给定或默认项目中创建新的通用组件定义。",
  "properties": {
    "path": {
      "type": "string",
      "format": "path",
      "description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.\n\n要创建的组件文件的路径，是相对于当前工作空间的。默认值为与项目根目录中的组件同名的文件夹。",
      "visible": false
    },
    "project": {
      "type": "string",
      "description": "The name of the project.\n\n项目的名称。",
      "$default": {
        "$source": "projectName"
      }
    },
    "name": {
      "type": "string",
      "description": "The name of the component.\n\n组件的名称。",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the component?"
    },
    "displayBlock": {
      "description": "Specifies if the style will contain `:host { display: block; }`.\n\n指定是否要在样式中包含 `:host { display: block; }` 。",
      "type": "boolean",
      "default": false,
      "alias": "b"
    },
    "inlineStyle": {
      "description": "Include styles inline in the component.ts file. Only CSS styles can be included inline. By default, an external styles file is created and referenced in the component.ts file.\n\n在 component.ts 文件中包含内联样式。只能内联 CSS 样式。默认情况下，将创建一个外部样式文件，并在 component.ts 文件中对其进行引用。",
      "type": "boolean",
      "default": false,
      "alias": "s",
      "x-user-analytics": 9
    },
    "inlineTemplate": {
      "description": "Include template inline in the component.ts file. By default, an external template file is created and referenced in the component.ts file.\n\n在 component.ts 文件中包含内联模板。默认情况下，将创建一个外部模板文件，并在 component.ts 文件中对其进行引用。",
      "type": "boolean",
      "default": false,
      "alias": "t",
      "x-user-analytics": 10
    },
    "viewEncapsulation": {
      "description": "The view encapsulation strategy to use in the new component.\n\n在新组件中使用的视图封装策略。",
      "enum": ["Emulated", "Native", "None", "ShadowDom"],
      "type": "string",
      "alias": "v",
      "x-user-analytics": 11
    },
    "changeDetection": {
      "description": "The change detection strategy to use in the new component.\n\n在新组件中使用的变更检测策略。",
      "enum": ["Default", "OnPush"],
      "type": "string",
      "default": "Default",
      "alias": "c"
    },
    "prefix": {
      "type": "string",
      "description": "The prefix to apply to the generated component selector.\n\n用于生成组件选择器的前缀。",
      "alias": "p",
      "oneOf": [
        {
          "maxLength": 0
        },
        {
          "minLength": 1,
          "format": "html-selector"
        }
      ]
    },
    "style": {
      "description": "The file extension or preprocessor to use for style files.\n\n用于样式文件的扩展名/预处理器。",
      "type": "string",
      "default": "css",
      "enum": [
        "css",
        "scss",
        "sass",
        "less",
        "styl"
      ],
      "x-user-analytics": 5
    },
    "type": {
      "type": "string",
      "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".\n\n将开发人员定义的类型添加到文件名中，格式为 “name.type.ts”。",
      "default": "Component"
    },
    "skipTests": {
      "type": "boolean",
      "description": "Do not create \"spec.ts\" test files for the new component.\n\n不要为新组件创建 “spec.ts” 测试文件。",
      "default": false,
      "x-user-analytics": 12
    },
    "flat": {
      "type": "boolean",
      "description": "Create the new files at the top level of the current project.\n\n在当前项目的顶层创建新文件。",
      "default": false
    },
    "skipImport": {
      "type": "boolean",
      "description": "Do not import this component into the owning NgModule.\n\n不要将此组件导入所属的 NgModule 中。",
      "default": false,
      "x-user-analytics": 18
    },
    "selector": {
      "type": "string",
      "format": "html-selector",
      "description": "The HTML selector to use for this component.\n\n用于此组件的 HTML 选择器。"
    },
    "skipSelector": {
      "type": "boolean",
      "default": false,
      "description": "Specifies if the component should have a selector or not.\n\n指定组件是否应具有选择器。"
    },
    "module": {
      "type": "string",
      "description": "The declaring NgModule.\n\n指定其声明模块。",
      "alias": "m"
    },
    "export": {
      "type": "boolean",
      "default": false,
      "description": "The declaring NgModule exports this component.\n\n将从声明模块中导出此组件。",
      "x-user-analytics": 19
    },
    "entryComponent": {
      "type": "boolean",
      "default": false,
      "description": "The new component is the entry component of the declaring NgModule.\n\n此新组件是声明模块中的入口组件。",
      "x-deprecated": "Since version 9.0.0 with Ivy, entryComponents is no longer necessary.\n\n从支持 Ivy 的 9.0.0 版开始，不再需要 entryComponents 了。"
    },
    "lintFix": {
      "type": "boolean",
      "description": "Apply lint fixes after generating the component.\n\n生成此组件后，应用 lint 修复程序。",
      "x-user-analytics": 15,
      "x-deprecated": "Use \"ng lint --fix\" directly instead.\n\n改为直接用 \"ng lint --fix\"。"
    }
  },
  "required": [
    "name"
  ]
}
